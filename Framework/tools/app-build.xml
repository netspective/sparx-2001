<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================

Build file for Application - for use with the Jakarta Ant java build tool

Setup instructions:
    Before running an Ant build, you must
     - set the JAVA_HOME environment variable to the JDK root directory
     - set the ANT_HOME environment variable to the Ant root directory
     - set CLASSPATH with all required libraries:
       * Sparx
       * Apache Xerces 1.4 or above (http://xml.apache.org)
       * Apache Xalan 2.1 or above (http://xml.apache.org)
       * Jakarta ORO Matcher 2.0 or above (http://jakarta.apache.org)
       * Jakarta Log4J 1.1 or above (http://jakarta.apache.org)
       * Java Servlet API 2.2 or above (http://java.sun.com)
       * Java JDBC 2.0 Standard Extensions (http://java.sun.com)
-->

<project name="app" default="all" basedir="${basedir}">

    <target name="init">
    	<tstamp/>

    	<echo message="Running build in ${basedir}"/>
	<property environment="env"/>
    
    	<!-- define all the tasks that will be used in this file -->
	<taskdef name="sparx" classname="com.xaf.ant.BuildConfigurationTask"/>
	<taskdef name="config" classname="com.xaf.ant.ImportConfigurationTask"/>
	<taskdef name="dal" classname="com.xaf.ant.GenerateJavaDALTask"/>
	<taskdef name="dcb" classname="com.xaf.ant.GenerateDialogBeansTask"/>
	<taskdef name="cp" classname="com.xaf.ant.ClassPathTask"/>

    	<!-- read all of the configuration.xml entries into config.* entries -->
	<config file="Site/WEB-INF/configuration.xml" prefix="config." debug="no"/>
	
	<!-- put the build configuration items into the properties (com.xaf.ant.BuildConfigurationTask) -->
	<sparx/>
	
	<!-- setup some common properties -->
	<property name="framework.source.dir" value="${env.SPARX_HOME}/java"/>
   	<echo message="Sparx source is in ${framework.source.dir}"/>

	<property name="app.classes.dir" value="${config.app.web-inf-root-path}/classes"/>
	<property name="app.lib.dir" value="${config.app.web-inf-root-path}/lib"/>
	<property name="resin.work.dir" value="${config.app.web-inf-root-path}/work"/>
	<property name="java.dal.stylesheet.root.dir" value="${config.framework.shared.xslt-path}/schema-gen/java-gen"/>
	
	<property name="app.documents.root.dir" value="${config.app.project-root}/Documents"/>
	<property name="app.javadoc.root.dir" value="${app.documents.root.dir}/javadoc"/>

	<property name="app.java.dal.dir" value="${config.app.database-root-path}/java"/>
	<property name="app.java.dal.jar" value="${config.app.database-root-path}/dal.jar"/>
	<property name="app.java.dal.doc.dir" value="${app.javadoc.root.dir}/dal"/>

	<property name="app.java.dcb.package" value="dialog.context"/>
	<property name="app.java.dcb.dir" value="${config.app.ui.root-path}/classes"/>
	<property name="app.java.dcb.jar" value="${app.java.dcb.dir}/dcb.jar"/>
	<property name="app.java.dcb.doc.dir" value="${app.javadoc.root.dir}/dcb"/>
	
	<property name="app.java.classpath" value="${app.classes.dir}:${app.lib.dir}/dal.jar:${app.lib.dir}/dcb.jar"/>
		
	<!-- show all the active classpaths -->
	<cp listall="yes"/>
    </target>
    
    <!-- 
    ============================= Compile application ======================= 
    -->
    
    <target name="app" depends="init">
	    <javac srcdir="${app.classes.dir}" classpath="${app.java.classpath}"/>
    </target>
    
    <!-- 
    ============================= Generate Database Items ======================= 
    -->
        
    <target name="dal" depends="init">
        <!-- generate the data access layer java files -->
    	<delete dir="${app.java.dal.dir}"/>
    	<dal schema="${config.app.schema.source-file}" dest="${app.java.dal.dir}" stylesheetroot="${java.dal.stylesheet.root.dir}"/>
    	<property name="dal.temp.build.dir" value="${app.java.dal.dir}/classes"/>
    	<mkdir dir="${dal.temp.build.dir}"/>
        <javac srcdir="${app.java.dal.dir}" destdir="${dal.temp.build.dir}"/>
        <jar jarfile="${app.java.dal.jar}" basedir="${dal.temp.build.dir}">
            <include name="**"/>
        </jar>
        
        <!-- now move the file to the application's lib directory -->
    	<delete dir="${dal.temp.build.dir}"/>
    	<mkdir dir="${app.lib.dir}"/>
    	<move file="${app.java.dal.jar}" todir="${app.lib.dir}"/>
    	<echo message="The Data Access Library JAR file is in ${app.lib.dir}"/>
    </target>

    <target name="dal-doc" depends="dal">
        <mkdir dir="${app.java.dal.doc.dir}" />
        <javadoc packagenames="dal.*,com.xaf.db.*,com.xaf.db.schema.*,com.xaf.form.DialogContext,com.xaf.sql.DmlStatement"
             sourcepath="${app.java.dal.dir}:${framework.source.dir}"
             destdir="${app.java.dal.doc.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="Application DAL API"
             doctitle="Application DAL API Documentation"
             bottom="Copyright &#169; 2001 Netspective. All Rights Reserved."/>
    </target>
    
    <!-- 
    ============================= Generate UI Items ================================
    -->
        
    <target name="dcb" depends="init">
        <!-- generate the dialog context beans files -->
    	<dcb source="${config.app.ui.source-file}" package="${app.java.dcb.package}." dest="${app.java.dcb.dir}" debug="no"/>

    	<property name="dcb.temp.build.dir" value="${app.java.dcb.dir}/build"/>
    	<mkdir dir="${dcb.temp.build.dir}"/>
        <javac srcdir="${app.java.dcb.dir}" destdir="${dcb.temp.build.dir}"/>
        <jar jarfile="${app.java.dcb.jar}" basedir="${dcb.temp.build.dir}">
            <include name="**"/>
        </jar>

        <!-- now move the file to the application's lib directory -->
    	<delete dir="${dal.temp.build.dir}"/>
    	<mkdir dir="${app.lib.dir}"/>
    	<move file="${app.java.dcb.jar}" todir="${app.lib.dir}"/>
    	<echo message="The Dialog Context Beans JAR file is in ${app.lib.dir}"/>
    </target>
    
    <target name="dcb-doc" depends="dcb">
        <mkdir dir="${app.java.dcb.doc.dir}"/>
        <javadoc packagenames="${app.java.dcb.package}.*,com.xaf.form.*"
             sourcepath="${app.java.dcb.dir}:${framework.source.dir}"
             destdir="${app.java.dcb.doc.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="Application Dialog Context Beans API"
             doctitle="Application Dialog Context Beans API Documentation"
             bottom="Copyright &#169; 2001 Netspective. All Rights Reserved."/>
    </target>
    
    <!-- 
    ============================= Clean Items ================================== 
    * Dispose of all *.class files in WEB-INF/classes directory to 
      force an automatic recompile
    -->
        
    <target name="clean" depends="init">
	<delete>
		<fileset dir="${app.classes.dir}" includes="**/*.class"/>
	</delete>    	
	<delete dir="${resin.work.dir}"/>
	<delete dir="${config.app.site-temp-path}"/>
	<mkdir dir="${config.app.site-temp-path}"/>
    </target>

    <!-- =============================== Compile =============================== -->
    
    <target name="compile" depends="init">
        <javac srcdir="${app.classes.dir}"/>
    </target>
    
    <!-- =============================== Help =============================== -->
    <target name="all" depends="init,clean,dal,dcb,app,dal-doc,dcb-doc">
    	<echo message="Complete"/>
    </target>

    <target name="targets">
        <echo message=""/>
        <echo message="ANT build targets for Application"/>
        <echo message=""/>
        <echo message="The following targets are available:"/>
        <echo message="  all      Run all of the targets in this order: clean, dal, dal-doc, dcb, dcb-doc"/>
        <echo message="  clean    Clean directories"/>
        <echo message="  compile  Compile all the classes in the WEB-INF/classes directory"/>
        <echo message="  dal      Generate the Data Access Layer (DAL) from SchemaDoc (XML)"/>
        <echo message="  dal-doc  Generate the Data Access Layer (DAL) API Documentation"/>
        <echo message="  dcb      Generate the Dialog Context Beans from Dialogs (XML)"/>
        <echo message="  dcb-doc  Generate the Dialog Context Beans API Documentation"/>
    </target>
</project>