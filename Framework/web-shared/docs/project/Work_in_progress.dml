<?xml version="1.0"?>

<article>
	<project name="Sparx WIP">

		<summary>
			The eXtensible Application Framework (XAF) work in progress.
		</summary>
		<project-attribute name="Team Leader">Shahid N. Shah</project-attribute>
		<project-attribute name="Last Update"/>
		<project-attribute name="Resources"/>

		<task>
			<name>ACE</name>
			<task><name>Enable ACE instrumentation using <a href="http://java.sun.com/products/JavaManagement/">JMX</a>.</name></task>
			<task><name>SchemaDoc (XML) area of ACE needs to be color-coordinated with remainder of ACE.</name></task>
			<task><name>Allow dialog testing/execution to specify/select a skin.</name></task>
			<task><name>Need to go through all the code to make sure all tags are documented (missing initial-focus, XML skins, field.report, DialogDirector additions, primary-key field attribute, &lt;access-control&gt; tag, reg exp validation, &lt;configuration&gt; tag, QueryBuilderDialog, and field.separator rule attributes).</name></task>
			<task><name>Add Database Explorer component to browse live databases (connected with SchemaDoc).</name></task>
			<task><name>Add table class generator support similar to <a href="http://www.jetools.com">JET Code Generator</a>.</name></task>
			<task><name>In "Framework Documents" need "active path" or "cookie crumbs" feature to indicate location of document.</name></task>
		</task>

		<task>
			<name>User Interface Management</name>
			<task><name>Optimize performance of DialogSkin by using Writer instead of String for HTML generation (like in ReportSkin).</name></task>
			<task><name>Add paging capability for static queries (just like in Query Definition).</name></task>
			<task><name>Add ability to auto-generate "form bean" java classes from Dialog XML (at runtime).</name></task>
			<task><name>Create methods that can use reflection to fill in ReportContext and DialogContext values into a Bean.</name></task>
			<task><name>Field persistence through cookies still needs to be implemented.</name></task>
			<task><name>Implement e-mail feature in output types for Query Builder and Query Select Dialogs.</name></task>
			<task><name>Implement file compression in output types for Query Builder and Query Select Dialogs.</name></task>
			<task><name>When the Done button is pressed in Query Builder and Query Select Dialogs, close statements and result sets.</name></task>
			<task><name>Implement new field type &lt;field.schema&gt; to create fields directly from SchemaDoc.</name></task>
			<task><name>Create non-cacheable dialogs so that certain dialogs will always be created when called (allows for dynamic dialogs).</name></task>
			<task><name>Allow skins to be modified through XML (dialog skins are mostly ok, report skins need implementation).</name></task>
			<task><name>In reports, when a value is formatted (like, e.g. with commas or dollar signs) then the formatted value is also used in URLs. There should be an option to use an alternate value formatting and URLs.</name></task>
			<task><name>Allow &lt;field.select&gt; and &lt;field.report&gt; to specify max number of selections a user can make.</name></task>
			<task><name>Allow queries to generate editable grid fields (requires non-cacheable dialogs).</name></task>
			<task><name>In ReportSkin, allow dynamic replacement of "no rows found" message with a user-supplied one.</name></task>
			<task><name>Allow easier HTML embedding in dialogs and reports (right now it's too hard).</name></task>
			<task><name>Conditionals require mandatory fields to work properly (the "data" attribute).</name></task>
			<task><name>Implement popup JavaScript calendar for date/time fields.</name></task>
			<task><name>Allow query select dialogs to return &lt;field.report&gt; dialog.</name></task>
			<task><name>Allow an alternate default in &lt;field.select&gt; if a ListValueSource returns an empty list.</name></task>
			<task><name>Allow navigator items to be shown/hidden dynamically.</name></task>
			<task><name>Replace NULLs with blank or space in reports.</name></task>
			<task><name>Remove all hard-coded instances of "/shared" in Framework code (use configuration instead).</name></task>
			<task><name>Most of the &lt;field.*&gt; tags need client-side JavaScript validation (numeric, date/time, etc).</name></task>
			<task><name>Add options to FileSystemNavigator and ACE to automatically ignored "CVS" directory when scanning files.</name></task>
			<task><name>Add ability to automatically figure out if CVS is being used and show version and log information from FileSystemNavigator and ACE.</name></task>
		</task>

		<task>
			<name>Database Management</name>
			<task><name>Add ability to generate XML from queries (should be a XmlReportSkin object).</name></task>
			<task><name>Add Statement.close() in addition to ResultSet.close() and Connection.close().</name></task>
			<task><name>Add sequences, composite forgeign keys to SchemaDoc.</name></task>
			<task><name>Create cacheable ResultSets with configurable timeouts.</name></task>
			<task><name>Add support for <a href="http://sourceforge.net/projects/csvjdbc/">CSV JDBC</a> Driver.</name></task>
			<task><name>Add support for <a href="http://jrf.sourceforge.net/">jRelationalFramework</a> for Java-based access to RDBMS tables</name></task>
			<task><name>Add support for <a href="http://www.markwatson.com/opensource/opensource.htm#nlbean">NLBean</a> for natural language processing (or create natural language interface to Query Definitions).</name></task>
		</task>

		<task>
			<name>Architecture</name>
			<task><name>Add ability to turn off file-change scanning in XmlSource (production software shouldn't check for changed files).</name></task>
			<task><name>Add "category" column to xaf.monitor.page log. Categories will be "page", "skin", "context", etc.</name></task>
			<task><name>In the logging calls, use HttpUtils.getRequestURL() method instead of constructing "source" references manually.</name></task>
			<task><name>Integrate some of the features from <a href="http://www.servidium.com/site/logfactor5/index.html">LogFactor5</a> into ACE.</name></task> 
			<task><name>Integrate <a href="http://www.servlets.com/cos/index.html">O'Reilly Servlet Package</a> into XAF (for MultiPart parsing), ServletUtils, and ParameterParser.</name></task>
			<task><name>Add ability to retrieve environment variables for configuration properties (use Ant example).</name></task>
			<task><name>Add logging of SQL Query Definitions.</name></task>
			<task><name>Add option to log the values of request parameters, forms when logging DialogContext.</name></task>
			<task><name>Add auditing of user actions in dialogs, pages, and SQL (as opposed to just system logging).</name></task>
			<task><name>Run JavaPureCheck on Sparx.</name></task>
			<task><name>Test Sparx on Tomcat, JRun, and WebLogic.</name></task>
			<task><name>Integrate the IBM BSF into value sources (create a javascript: value source).</name></task>
			<task><name>Combine SingleValueSource and ListValueSource interfaces into just ValueSource (no need for two types).</name></task>
			<task><name>Port Perl SDE::CVS module.</name></task>
			<task><name>Add <a href="http://freshmeat.net/releases/51516/">Java Exception Notification</a> into framework.</name></task>
			<task><name>Integrate <a href="http://httpunit.sourceforge.net/">HTTPUnit</a> for doing black-box unit testing of HTML generators (skins).</name></task>
			<task><name>Integrate <a href="http://httpunit.sourceforge.net/doc/servletunit-intro.html">ServletUnit</a> or <a href="http://jakarta.apache.org/commons/cactus/">Jakarta Cactus</a> for doing black-box and white-box unit testing of servlets.</name></task>
			<task><name>Integrate <a href="http://www.vaegar.f9.co.uk/java2html.html">Java2HTML</a> to allow colorized Java code to be viewed through browser (in addition to JavaDoc)</name></task>
			<task><name>Create Netspective Core library patterned after <a href="http://www.generationjava.com/java/GenJavaCore.shtml">GenerationJava Core Library</a>.</name></task>
		</task>

		<task>
			<name>Security</name>
			<task><name>When sessions time-out, set a flag so that login dialogs can indicate a timeout to the end user. Also add session timing out as a separate activity in the security monitor log.</name></task>
			<task><name>Add basic User Management functionality to the Access Control framework. Use <a href="http://jakarta.apache.org/tomcat/tomcat-4.0-doc/config/realm.html">Realm</a> design pattern and find a way to use the HttpServletRequest.getUserPrincipal() and HttpServletRequest.isUserInRole() methods.</name></task>
		</task>

		<task>
			<name>Platform-specific</name>
			<task><name>On Linux, the Work In Progress (Framework Documents) page is not working (XALAN problem?).</name></task>
		</task>

	</project>
</article>