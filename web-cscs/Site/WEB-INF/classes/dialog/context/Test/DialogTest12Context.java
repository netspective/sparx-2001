
/* this file is generated by com.netspective.sparx.xaf.form.Dialog.getSubclassedDialogContextCode(), do not modify (you can extend it, though) */

package dialog.context.Test;

import com.netspective.sparx.xaf.form.*;

public class DialogTest12Context extends DialogContext
{
	public boolean isFloatFieldValueSet() { return hasValue("float_field"); }
	public boolean isFloatFieldFlagSet(long flag) { return flagIsSet("float_field", flag); }
	public void setFloatFieldFlag(long flag) { setFlag("float_field", flag); }
	public void clearFloatFieldFlag(long flag) { clearFlag("float_field", flag); }
	public String getFloatFieldRequestParam() { return request.getParameter("_dc.float_field"); }
	public DialogField getFloatFieldField() { return getField("float_field"); }
	public DialogContext.DialogFieldState getFloatFieldFieldState() { return getFieldState("float_field"); }
	public void addFloatFieldErrorMsg(String msg) { addErrorMessage("float_field", msg); }
	public float getFloatField() { Float o = (Float) getValueAsObject("float_field"); return o == null ? (float) 0.0 : o.floatValue(); }
	public float getFloatField(float defaultValue) { Float o = (Float) getValueAsObject("float_field"); return o == null ? defaultValue : o.floatValue(); }
	public void setFloatField(float value) { setValue("float_field", Float.toString(value)); }

	public boolean isIntegerFieldValueSet() { return hasValue("integer_field"); }
	public boolean isIntegerFieldFlagSet(long flag) { return flagIsSet("integer_field", flag); }
	public void setIntegerFieldFlag(long flag) { setFlag("integer_field", flag); }
	public void clearIntegerFieldFlag(long flag) { clearFlag("integer_field", flag); }
	public String getIntegerFieldRequestParam() { return request.getParameter("_dc.integer_field"); }
	public DialogField getIntegerFieldField() { return getField("integer_field"); }
	public DialogContext.DialogFieldState getIntegerFieldFieldState() { return getFieldState("integer_field"); }
	public void addIntegerFieldErrorMsg(String msg) { addErrorMessage("integer_field", msg); }
	public int getIntegerField() { Integer o = (Integer) getValueAsObject("integer_field"); return o == null ? 0 : o.intValue(); }
	public int getIntegerField(int defaultValue) { Integer o = (Integer) getValueAsObject("integer_field"); return o == null ? defaultValue : o.intValue(); }
	public void setIntegerField(int value) { setValue("integer_field", Integer.toString(value)); }

	public boolean isSsnFieldValueSet() { return hasValue("ssn_field"); }
	public boolean isSsnFieldFlagSet(long flag) { return flagIsSet("ssn_field", flag); }
	public void setSsnFieldFlag(long flag) { setFlag("ssn_field", flag); }
	public void clearSsnFieldFlag(long flag) { clearFlag("ssn_field", flag); }
	public String getSsnFieldRequestParam() { return request.getParameter("_dc.ssn_field"); }
	public DialogField getSsnFieldField() { return getField("ssn_field"); }
	public DialogContext.DialogFieldState getSsnFieldFieldState() { return getFieldState("ssn_field"); }
	public void addSsnFieldErrorMsg(String msg) { addErrorMessage("ssn_field", msg); }
	public String getSsnField() { return getValue("ssn_field"); }
	public String getSsnField(String defaultValue) { return getValue("ssn_field", defaultValue); }
	public String getSsnFieldOrBlank() { return getValue("ssn_field", ""); }
	public void setSsnField(String value) { setValue("ssn_field", value); }

}
